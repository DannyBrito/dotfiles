# cd-directories
alias cd-dev="cd ${dev_dir}"
alias cd-config="cd ${config_dir}"
alias cd-dotfiles="cd ${_dotfiles_dir}"

# Navigate up directories
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias -- -="cd -"

# programs/binaries aliases
alias g="git"
alias k="kubectl"
alias d="docker"

# code quick open
alias ecalias="code ${alias_funcs_dir}/bash"
alias ecgit="code ${alias_funcs_dir}/git"
alias ecbashrc="code ${HOME}/.bashrc"
alias eczshrc="code ${HOME}/.zshrc"

# Print each PATH entry on a separate line
alias path='echo -e ${PATH//:/\\n}'

# Grep with color
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

# Flush Directory Service cache
alias flush="dscacheutil -flushcache && killall -HUP mDNSResponder"

# Cleanup .DS_Store files
alias cleanup="find . -type f -name '*.DS_Store' -ls -delete"

# Empty the Trash on all mounted volumes and the main HDD.
# Also, clear Apple’s System Logs to improve shell startup speed.
# Finally, clear download history from quarantine. https://mths.be/bum
alias emptytrash="sudo rm -rfv /Volumes/*/.Trashes; sudo rm -rfv ~/.Trash; sudo rm -rfv /private/var/log/asl/*.asl; sqlite3 ~/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV* 'delete from LSQuarantineEvent'"

alias cc="clear"

# Enable aliases to be sudo'ed
alias sudo='sudo '

function git-cred(){
    if [[ -e "${config_dir}/cred.env" ]]; then
        export $(xargs <${config_dir}/cred.env)
    else
        echo "no cred.env found"
    fi
}

function git-new-cred(){
    if [[ -e "${config_dir}/new_cred.env" ]]; then
        export $(xargs <${config_dir}/new_cred.env)
    else
        echo "no new_cred.env found"
    fi
}

function bat_fallback() {
    if command -v bcat > /dev/null 2>&1; then
        bcat "$@"
    elif command -v bat > /dev/null 2>&1 && [ "$(command -v bat)" != "$(alias bat)" ]; then
        bat "$@"
    elif command -v batcat > /dev/null 2>&1; then
        batcat "$@"
    elif command -v cat > /dev/null 2>&1; then
        cat "$@"
    else
        echo "error"
        return 1
    fi
}

alias bat='bat_fallback'

# functions
function lsa(){
    echo "Running: ls -a"
    ls -a
}

function xx(){
    echo "Running: exit 0"
    exit 0
}

function sh-restart(){
    exec $SHELL
}

# check given vs calculated
# example: checksum 69274fd3b9e65b39e33070376400b7e31664388cdee012591fabc849bee4258e kubernetes.tar.gz
function checksum(){
    if [ -z "$1" || -z "$2" ]; then
        echo "usage: checksum <sha-num> <file> (e.g checksum 6...e k8s.tar.gz)"
        exit 1
    fi
    local given=$1
    local fileToCheck=$2
    echo "$given $fileToCheck" | sha256sum -c
}

function server() {
    local port="${1:-8000}"
    sleep 1 && open "http://localhost:${port}/" &
    # Set the default Content-Type to `text/plain` instead of `application/octet-stream`
    # And serve everything as UTF-8 (although not technically correct, this doesn’t break anything for binary files)
    python3 -c $'import http.server;\nmap = http.server.SimpleHTTPRequestHandler.extensions_map;\nmap[""] = "text/plain";\nfor key, value in map.items():\n\tmap[key] = value + ";charset=UTF-8";\nhttp.server.test(HandlerClass=http.server.SimpleHTTPRequestHandler, port=int('$port'))'
}
